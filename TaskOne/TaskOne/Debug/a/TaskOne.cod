; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27024.1 

	TITLE	D:\Workspace\asm\TaskOne\TaskOne\TaskOne.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__99828DCB_pch@h DB 01H
__0C7677DD_taskone@pch DB 01H
__AFC2D926_taskone@cpp DB 01H
__D23EE329_cstdlib DB 01H
__EDC08FAA_corecrt_math@h DB 01H
__FE874262_stdlib@h DB 01H
__78F4D6C6_string@h DB 01H
__9CE3A74D_corecrt_wstring@h DB 01H
__9F081559_corecrt_memory@h DB 01H
__07523DAF_corecrt_memcpy_s@h DB 01H
__6BC0FD35_vcruntime_new@h DB 01H
__A3797CDC_stdio@h DB 01H
__BAC7FC50_corecrt_wstdio@h DB 01H
__320E01E0_corecrt_stdio_config@h DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vfscanf_l
PUBLIC	_scanf
PUBLIC	?read@@YAPADXZ					; read
PUBLIC	?write@@YAXPAD@Z				; write
PUBLIC	?delete_last_spaces@@YAPADPAD@Z			; delete_last_spaces
PUBLIC	_main
PUBLIC	__JustMyCode_Default
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_06JMNMKNBM@?5?$CF?$FL?$FO?6?$FN@		; `string'
PUBLIC	??_C@_03JMGKJPBM@?$CFs?$HM@			; `string'
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__malloc:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_03JMGKJPBM@?$CFs?$HM@
CONST	SEGMENT
??_C@_03JMGKJPBM@?$CFs?$HM@ DB '%s|', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JMNMKNBM@?5?$CF?$FL?$FO?6?$FN@
CONST	SEGMENT
??_C@_06JMNMKNBM@?5?$CF?$FL?$FO?6?$FN@ DB ' %[^', 0aH, ']', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\workspace\asm\taskone\taskone\taskone.cpp
;	COMDAT _main
_TEXT	SEGMENT
_buff$ = -8						; size = 4
_main	PROC						; COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AFC2D926_taskone@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

  00028	e8 00 00 00 00	 call	 ?read@@YAPADXZ		; read
  0002d	89 45 f8	 mov	 DWORD PTR _buff$[ebp], eax

  00030	8b 45 f8	 mov	 eax, DWORD PTR _buff$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?delete_last_spaces@@YAPADPAD@Z ; delete_last_spaces
  00039	83 c4 04	 add	 esp, 4
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?write@@YAXPAD@Z	; write
  00042	83 c4 04	 add	 esp, 4

  00045	33 c0		 xor	 eax, eax

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00050	3b ec		 cmp	 ebp, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\workspace\asm\taskone\taskone\taskone.cpp
;	COMDAT ?delete_last_spaces@@YAPADPAD@Z
_TEXT	SEGMENT
_res$ = -32						; size = 4
_i$ = -20						; size = 4
_len$ = -8						; size = 4
_s$ = 8							; size = 4
?delete_last_spaces@@YAPADPAD@Z PROC			; delete_last_spaces, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _len$[ebp], 0

  00025	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

  0002c	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]

  0002f	50		 push	 eax

  00030	e8 00 00 00 00	 call	 _strlen

  00035	83 c4 04	 add	 esp, 4

  00038	89 45 f8	 mov	 DWORD PTR _len$[ebp], eax

  0003b	8b 75 f8	 mov	 esi, DWORD PTR _len$[ebp]

  0003e	4e		 dec	 esi

  0003f	8b 5d 08	 mov	 ebx, DWORD PTR _s$[ebp]
$CHECK$3:

  00042	80 3c 33 20	 cmp	 BYTE PTR [ebx+esi], 32	; 00000020H

  00046	74 02		 je	 SHORT $NEXT$4

  00048	eb 03		 jmp	 SHORT $END$5
$NEXT$4:

  0004a	4e		 dec	 esi

  0004b	eb f5		 jmp	 SHORT $CHECK$3
$END$5:

  0004d	46		 inc	 esi

  0004e	56		 push	 esi

  0004f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc

  00055	83 c4 04	 add	 esp, 4

  00058	83 f8 00	 cmp	 eax, 0

  0005b	74 20		 je	 SHORT $ERR$6

  0005d	89 45 e0	 mov	 DWORD PTR _res$[ebp], eax

  00060	89 75 ec	 mov	 DWORD PTR _i$[ebp], esi

  00063	8b 45 ec	 mov	 eax, DWORD PTR _i$[ebp]

  00066	50		 push	 eax

  00067	ff 75 08	 push	 DWORD PTR _s$[ebp]

  0006a	ff 75 e0	 push	 DWORD PTR _res$[ebp]

  0006d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy

  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

  00076	8b 45 e0	 mov	 eax, DWORD PTR _res$[ebp]

  00079	c6 04 30 00	 mov	 BYTE PTR [eax+esi], 0
$ERR$6:

  0007d	8b 45 e0	 mov	 eax, DWORD PTR _res$[ebp]

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00089	3b ec		 cmp	 ebp, esp
  0008b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
?delete_last_spaces@@YAPADPAD@Z ENDP			; delete_last_spaces
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\workspace\asm\taskone\taskone\taskone.cpp
;	COMDAT ?write@@YAXPAD@Z
_TEXT	SEGMENT
_format$ = -8						; size = 4
_s$ = 8							; size = 4
?write@@YAXPAD@Z PROC					; write, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _format$[ebp], OFFSET ??_C@_03JMGKJPBM@?$CFs?$HM@

  00025	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]

  00028	50		 push	 eax

  00029	8b 5d f8	 mov	 ebx, DWORD PTR _format$[ebp]

  0002c	53		 push	 ebx

  0002d	e8 00 00 00 00	 call	 _printf

  00032	83 c4 08	 add	 esp, 8

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
?write@@YAXPAD@Z ENDP					; write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\workspace\asm\taskone\taskone\taskone.cpp
;	COMDAT ?read@@YAPADXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
_format$ = -20						; size = 4
_s$ = -8						; size = 4
?read@@YAPADXZ PROC					; read, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

  0001e	68 00 01 00 00	 push	 256			; 00000100H
  00023	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00028	83 c4 04	 add	 esp, 4
  0002b	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00031	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00037	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax

  0003a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _format$[ebp], OFFSET ??_C@_06JMNMKNBM@?5?$CF?$FL?$FO?6?$FN@

  00041	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax

  00044	50		 push	 eax

  00045	8b 45 ec	 mov	 eax, DWORD PTR _format$[ebp]

  00048	50		 push	 eax

  00049	e8 00 00 00 00	 call	 _scanf

  0004e	83 c4 08	 add	 esp, 8

  00051	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
?read@@YAPADXZ ENDP					; read
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
;	COMDAT _scanf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT

; 1280 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A3797CDC_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1281 :         int _Result;
; 1282 :         va_list _ArgList;
; 1283 :         __crt_va_start(_ArgList, _Format);

  00028	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1284 :         _Result = _vfscanf_l(stdin, _Format, NULL, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00037	51		 push	 ecx
  00038	8b f4		 mov	 esi, esp
  0003a	6a 00		 push	 0
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 __vfscanf_l
  00052	83 c4 10	 add	 esp, 16			; 00000010H
  00055	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 1285 :         __crt_va_end(_ArgList);

  00058	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1286 :         return _Result;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 1287 :     }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1062 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A3797CDC_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1063 :         return __stdio_common_vfscanf(

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	51		 push	 ecx
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfscanf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 1064 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1065 :             _Stream, _Format, _Locale, _ArgList);
; 1066 :     }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A3797CDC_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  00028	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	8b 4d 08	 mov	 ecx, DWORD PTR __Format$[ebp]
  00037	51		 push	 ecx
  00038	8b f4		 mov	 esi, esp
  0003a	6a 01		 push	 1
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____acrt_iob_func
  00042	83 c4 04	 add	 esp, 4
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 __vfprintf_l
  00052	83 c4 10	 add	 esp, 16			; 00000010H
  00055	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 959  :         __crt_va_end(_ArgList);

  00058	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 960  :         return _Result;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 961  :     }

  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __A3797CDC_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	51		 push	 ecx
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H
  0004f	3b f4		 cmp	 esi, esp
  00051	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 644  :     }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0005f	3b ec		 cmp	 ebp, esp
  00061	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 94   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __320E01E0_corecrt_stdio_config@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 95   :         static unsigned __int64 _OptionsStorage;
; 96   :         return &_OptionsStorage;

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 97   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 85   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __320E01E0_corecrt_stdio_config@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
